{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/internal/internal.component.html","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/photos/photos.component.html","webpack:///./src/app/components/suppliers/suppliers.component.html","webpack:///./src/app/components/user-profile/user-profile.component.html","webpack:///./src/app/components/user/sign-in/sign-in.component.html","webpack:///./src/app/components/user/sign-up/sign-up.component.html","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/internal/internal.component.css","webpack:///./src/app/components/internal/internal.component.ts","webpack:///./src/app/components/menu/menu.component.css","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/photos/photos.component.css","webpack:///./src/app/components/photos/photos.component.ts","webpack:///./src/app/components/suppliers/suppliers.component.css","webpack:///./src/app/components/suppliers/suppliers.component.ts","webpack:///./src/app/components/user-profile/user-profile.component.css","webpack:///./src/app/components/user-profile/user-profile.component.ts","webpack:///./src/app/components/user/sign-in/sign-in.component.css","webpack:///./src/app/components/user/sign-in/sign-in.component.ts","webpack:///./src/app/components/user/sign-up/sign-up.component.css","webpack:///./src/app/components/user/sign-up/sign-up.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/models/internal.ts","webpack:///./src/app/models/menu.ts","webpack:///./src/app/models/photo.ts","webpack:///./src/app/models/supplier.ts","webpack:///./src/app/services/internal.service.ts","webpack:///./src/app/services/menu.service.ts","webpack:///./src/app/services/photo.service.ts","webpack:///./src/app/services/supplier.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- NAVBAR -->\\r\\n<div class=\\\"navbar-fixed\\\">\\r\\n  <nav class=\\\"deep-purple\\\">\\r\\n    <div class=\\\"nav-wrapper container\\\">\\r\\n      <a routerLink=\\\"\\\" class=\\\"brand-logo\\\">Muelle 13</a>\\r\\n      <a href=\\\"#\\\" data-target=\\\"menu-responsive\\\" class=\\\"sidenav-trigger\\\">\\r\\n        <i class=\\\"material-icons\\\">menu</i>\\r\\n      </a>\\r\\n      <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\r\\n        <div *ngIf=\\\"!user.isLoggedIn(); else logout\\\">\\r\\n          <li routerLinkActive=\\\"active current\\\"><a routerLink=\\\"/signup\\\">Sign Up</a></li>\\r\\n          <li routerLinkActive=\\\"active current\\\"><a routerLink=\\\"/login\\\">Sign In</a></li>\\r\\n        </div>\\r\\n        <ng-template #logout>\\r\\n          <li routerLinkActive=\\\"active current\\\"><a routerLink=\\\"/photos\\\">Photos</a></li>\\r\\n          <li routerLinkActive=\\\"active current\\\"><a routerLink=\\\"/suppliers\\\">Suppliers</a></li>\\r\\n          <li routerLinkActive=\\\"active current\\\"><a routerLink=\\\"/internal\\\">Internal</a></li>\\r\\n          <li routerLinkActive=\\\"active current\\\"><a routerLink=\\\"/menu\\\">Menu</a></li>\\r\\n          <li><a>Logout</a></li>\\r\\n        </ng-template>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n\\r\\n<!-- SIDENAV -->\\r\\n<ul class=\\\"sidenav\\\" id=\\\"menu-responsive\\\">\\r\\n  <div *ngIf=\\\"!user.isLoggedIn(); else logoutmobile\\\">\\r\\n    <li><a class=\\\"subheader\\\">Sign Up or Sign In</a></li>\\r\\n    <li>\\r\\n      <div class=\\\"divider\\\"></div>\\r\\n    </li>\\r\\n    <li routerLinkActive=\\\"active current\\\">\\r\\n      <a routerLink=\\\"/signup\\\" class=\\\"sidenav-close\\\">Sign Up</a>\\r\\n    </li>\\r\\n    <li routerLinkActive=\\\"active current\\\">\\r\\n      <a routerLink=\\\"/login\\\" class=\\\"sidenav-close\\\">Sign In</a>\\r\\n    </li>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #logoutmobile>\\r\\n    <li><a class=\\\"subheader\\\">Menu</a></li>\\r\\n    <li>\\r\\n      <div class=\\\"divider\\\"></div>\\r\\n    </li>\\r\\n    <li routerLinkActive=\\\"active current\\\">\\r\\n      <a routerLink=\\\"/photos\\\" class=\\\"sidenav-close\\\">\\r\\n        <i class=\\\"material-icons\\\">photo</i>\\r\\n        Photos\\r\\n      </a>\\r\\n    </li>\\r\\n    <li routerLinkActive=\\\"active current\\\">\\r\\n      <a routerLink=\\\"/suppliers\\\" class=\\\"sidenav-close\\\">\\r\\n        <i class=\\\"material-icons\\\">drive_eta</i>\\r\\n        <span matBadge=\\\"4\\\" matBadgeOverlap=\\\"false\\\">Suppliers</span>\\r\\n      </a>\\r\\n    </li>\\r\\n    <li routerLinkActive=\\\"active current\\\">\\r\\n      <a routerLink=\\\"/internal\\\" class=\\\"sidenav-close\\\">\\r\\n        <i class=\\\"material-icons\\\">note</i>\\r\\n        Internal\\r\\n      </a>\\r\\n    </li>\\r\\n    <li routerLinkActive=\\\"active current\\\">\\r\\n      <a routerLink=\\\"/menu\\\" class=\\\"sidenav-close\\\">\\r\\n        <i class=\\\"material-icons\\\">restaurant_menu</i>\\r\\n        Menu\\r\\n      </a>\\r\\n    </li>\\r\\n    <li>\\r\\n      <a>\\r\\n        <i class=\\\"material-icons\\\">keyboard_return</i>\\r\\n        Logout\\r\\n      </a>\\r\\n    </li>\\r\\n  </ng-template>\\r\\n</ul>\\r\\n\\r\\n<!-- CONTENT -->\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","module.exports = \"<p>home works</p>\\n\\n<div *ngFor=\\\"let photo of photoService.photos\\\">\\n    <img class=\\\"responsive-img materialboxed\\\" src=\\\"{{ photo.imageURL }}\\\">\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 m12 l4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-action\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <span class=\\\"card-title\\\">Gastos Internos</span>\\n        </div>\\n      </div>\\n\\n      <form #internalForm=\\\"ngForm\\\" (ngSubmit)=\\\"addInternal(internalForm)\\\">\\n        <div class=\\\"card-content\\\">\\n          <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"internalService.selectedInternal._id\\\">\\n          <div class=\\\"row\\\">\\n            <label>Tipo de gasto</label>\\n            <select class=\\\"browser-default\\\" name=\\\"type\\\" #type=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"internalService.selectedInternal.type\\\">\\n              <option value=\\\"\\\" disabled selected>Elige una opción</option>\\n              <option value=\\\"Aumento de salario\\\">Aumento de salario</option>\\n              <option value=\\\"Gas\\\">Gas</option>\\n              <option value=\\\"Agua\\\">Agua</option>\\n              <option value=\\\"Internet\\\">Internet</option>\\n            </select>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"responsible\\\" #responsible=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"internalService.selectedInternal.responsible\\\" placeholder=\\\"Ingrese responsable\\\" required>\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"number\\\" name=\\\"amount\\\" #amount=\\\"ngModel\\\" [(ngModel)]=\\\"internalService.selectedInternal.amount\\\"\\n                placeholder=\\\"Ingrese monto\\\" required>\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <textarea name=\\\"reason\\\" #reason=\\\"ngModel\\\" [(ngModel)]=\\\"internalService.selectedInternal.reason\\\" cols=\\\"30\\\"\\n                rows=\\\"20\\\" class=\\\"materialize-textarea\\\" placeholder=\\\"Escriba el motivo\\\" required></textarea>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-action\\\">\\n          <button mat-raised-button color=\\\"accent\\\" class=\\\"btn\\\">\\n            Guardar\\n          </button>\\n          <button mat-raised-button color=\\\"warn\\\" class=\\\"btn right\\\" (click)=\\\"resetForm(internalForm)\\\">\\n            Limpiar\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col s12 m12 l8\\\">\\n    <table class=\\\"card responsive-table\\\">\\n      <thead>\\n        <tr>\\n          <th>Tipo de gasto</th>\\n          <th>Responsable</th>\\n          <th>Monto</th>\\n          <th>Operations</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let internal of internalService.allInternal\\\">\\n          <td>{{ internal.type }}</td>\\n          <td>{{ internal.responsible }}</td>\\n          <td>{{ internal.amount | currency}}</td>\\n          <td>\\n            <a (click)=\\\"editInternal(internal)\\\">\\n              <i class=\\\"material-icons\\\">edit</i>\\n            </a>\\n            <a (click)=\\\"deleteInternal(internal._id)\\\">\\n              <i class=\\\"material-icons\\\">delete</i>\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 m12 l4\\\">\\n    <div class=\\\"card\\\">\\n      <form #menuForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMenu(menuForm)\\\">\\n        <div class=\\\"card-content\\\">\\n          <div class=\\\"row\\\">\\n            <label>Tipo de alimento/bebida</label>\\n            <select class=\\\"browser-default\\\" name=\\\"type\\\" #type=\\\"ngModel\\\" [(ngModel)]=\\\"menuService.selectedMenu.type\\\">\\n              <option value=\\\"\\\" disabled selected>Elige una opción</option>\\n              <option value=\\\"Bebida\\\">Bebida</option>\\n              <option value=\\\"Comida fria\\\">Comida fria</option>\\n              <option value=\\\"Comida caliente\\\">Comida caliente</option>\\n            </select>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"menuService.selectedMenu.name\\\"\\n                placeholder=\\\"Ingrese nombre\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <textarea name=\\\"description\\\" #description=\\\"ngModel\\\" [(ngModel)]=\\\"menuService.selectedMenu.description\\\"\\n                class=\\\"materialize-textarea\\\" placeholder=\\\"Escriba una descripcion\\\"></textarea>\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"number\\\" name=\\\"price\\\" #price=\\\"ngModel\\\" [(ngModel)]=\\\"menuService.selectedMenu.price\\\"\\n                placeholder=\\\"Ingrese precio\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"image\\\" #image=\\\"ngModel\\\" [(ngModel)]=\\\"menuService.selectedMenu.image\\\"\\n                placeholder=\\\"Imagen\\\">\\n            </div>\\n          </div>\\n          <!-- SHOW IMAGE -->\\n          <img class=\\\"responsive-img materialboxed\\\" id=\\\"img-selected\\\">\\n        </div>\\n        <div class=\\\"card-action\\\">\\n          <button mat-raised-button color=\\\"accent\\\" class=\\\"btn\\\">\\n            Save\\n          </button>\\n          <button mat-raised-button color=\\\"warn\\\" class=\\\"btn right\\\" (click)=\\\"resetForm(menuForm)\\\">\\n            Clear\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col s12 m12 l8\\\">\\n    <div class=\\\"row\\\">\\n      <div *ngFor=\\\"let menu of menuService.menus\\\">\\n        <div class=\\\"col s12 m12 l6\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-image\\\">\\n              <img src=\\\"{{ menu.image }}\\\" class=\\\"materialboxed\\\">\\n              <h1 class=\\\"card-title\\\"><b>{{ menu.name }}</b></h1>\\n            </div>\\n            <div class=\\\"card-content\\\">\\n              <p>{{ menu.description }}</p>\\n            </div>\\n            <div class=\\\"card-action\\\">\\n              <a (click)=\\\"editMenu(menu)\\\">\\n                <i class=\\\"material-icons\\\">edit</i>\\n              </a>\\n              <a (click)=\\\"deleteMenu(menu._id)\\\">\\n                <i class=\\\"material-icons\\\">delete</i>\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col s12 m12 l4\\\">\\r\\n        <mat-card id=\\\"mat-card\\\">\\r\\n            <mat-card-header>\\r\\n                <mat-card-title>Photo</mat-card-title>\\r\\n            </mat-card-header>\\r\\n            <form #photoForm=\\\"ngForm\\\" (ngSubmit)=\\\"addPhoto(photoForm)\\\" enctype=\\\"multipart/form-data\\\">\\r\\n                <mat-card-content>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"input-field col s12\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"title\\\" #title=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"photoService.selectedPhoto.title\\\" placeholder=\\\"Title\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"input-field col s12\\\">\\r\\n                            <textarea name=\\\"description\\\" #description=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"photoService.selectedPhoto.description\\\" class=\\\"materialize-textarea\\\"\\r\\n                                placeholder=\\\"Description\\\"></textarea>\\r\\n                        </div>\\r\\n                        <div class=\\\"file-field input-field col 12\\\">\\r\\n                            <div class=\\\"btn\\\">\\r\\n                                <span>File</span>\\r\\n                                <input type=\\\"file\\\" id=\\\"file\\\" name=\\\"imageURL\\\" #imageURL=\\\"ngModel\\\"\\r\\n                                    [(ngModel)]=\\\"photoService.selectedPhoto.imageURL\\\" onchange=\\\"show()\\\"\\r\\n                                    (change)=\\\"onFileSelected($event)\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"file-path-wrapper\\\">\\r\\n                                <input class=\\\"file-path validate\\\" type=\\\"text\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- SHOW IMAGE -->\\r\\n                    <img class=\\\"responsive-img materialboxed\\\" id=\\\"img-selected\\\">\\r\\n                </mat-card-content>\\r\\n                <mat-card-actions>\\r\\n                    <button mat-raised-button color=\\\"accent\\\" class=\\\"btn\\\" (click)=\\\"onUpload()\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <button mat-raised-button color=\\\"warn\\\" class=\\\"btn right\\\" (click)=\\\"resetForm(photoForm)\\\">\\r\\n                        Clear\\r\\n                    </button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col s12 m12 l8\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div *ngFor=\\\"let photo of photoService.photos\\\">\\r\\n                <div class=\\\"col s12 m12 l6\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-image\\\">\\r\\n                            <img src=\\\"{{ photo.imageURL }}\\\" class=\\\"materialboxed\\\">\\r\\n                            <h1 class=\\\"card-title\\\"><b>{{ photo.title }}</b></h1>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <p>{{ photo.description }}</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-action\\\">\\r\\n                            <a href=\\\"{{ photo.imageURL }}\\\" target=\\\"_blanck\\\">\\r\\n                                <i class=\\\"material-icons\\\">pageview</i>\\r\\n                            </a>\\r\\n                            <a><i class=\\\"material-icons\\\">edit</i></a>\\r\\n                            <a><i class=\\\"material-icons\\\">delete</i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 m12 l4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-action\\\">\\n        <div class=\\\"input-field col s12\\\">\\n          <span class=\\\"card-title\\\">Suppliers</span>\\n        </div>\\n      </div>\\n\\n      <form #supplierForm=\\\"ngForm\\\" (ngSubmit)=\\\"addSupplier(supplierForm)\\\">\\n        <div class=\\\"card-content\\\">\\n          <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"supplierService.selectedSupplier._id\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"companyName\\\" #companyName=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"supplierService.selectedSupplier.companyName\\\" placeholder=\\\"Enter company name\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"contactName\\\" #contactName=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"supplierService.selectedSupplier.contactName\\\" placeholder=\\\"Enter contact name\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"address\\\" #address=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"supplierService.selectedSupplier.address\\\" placeholder=\\\"Enter address\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"supplierService.selectedSupplier.city\\\"\\n                placeholder=\\\"Enter city\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"number\\\" name=\\\"postalCode\\\" #postalCode=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"supplierService.selectedSupplier.postalCode\\\" placeholder=\\\"Enter postal code\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"text\\\" name=\\\"country\\\" #country=\\\"ngModel\\\"\\n                [(ngModel)]=\\\"supplierService.selectedSupplier.country\\\" placeholder=\\\"Enter country\\\">\\n            </div>\\n            <div class=\\\"input-field col s12\\\">\\n              <input type=\\\"number\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"supplierService.selectedSupplier.phone\\\"\\n                placeholder=\\\"Enter phone\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-action\\\">\\n          <button mat-raised-button color=\\\"accent\\\" class=\\\"btn\\\">\\n            Save\\n          </button>\\n          <button mat-raised-button color=\\\"warn\\\" class=\\\"btn right\\\" (click)=\\\"resetForm(supplierForm)\\\">\\n            Clear\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col s12 m12 l8\\\">\\n    <table class=\\\"card responsive-table highlight\\\">\\n      <thead>\\n        <th>Company</th>\\n        <th>Contact</th>\\n        <th>Phone</th>\\n        <th>Operations</th>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let supplier of supplierService.suppliers\\\">\\n          <td>{{ supplier.companyName }}</td>\\n          <td>{{ supplier.contactName }}</td>\\n          <td>{{ supplier.phone }}</td>\\n          <td>\\n            <a (click)=\\\"editSupplier(supplier)\\\">\\n              <i class=\\\"material-icons\\\">edit</i>\\n            </a>\\n            <a (click)=\\\"deleteSupplier(supplier._id)\\\">\\n              <i class=\\\"material-icons\\\">delete</i>\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"","module.exports = \"<mat-card class=\\\"example-card\\\" *ngIf=\\\"userDetails\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>{{ userDetails.fullname }}</mat-card-title>\\n    <mat-card-subtitle>{{userDetails.email}}</mat-card-subtitle>\\n  </mat-card-header>\\n\\n  <mat-card-content></mat-card-content>\\n  \\n  <mat-card-actions>\\n    <button mat-raised-button type=\\\"button\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \"<div class=\\\"row valign-wrapper\\\">\\n  <div class=\\\"col s12 m12 l6 offset-l3 valign\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-action white-text\\\" id=\\\"card-title\\\">\\n        <span class=\\\"card-title\\\">Sign In</span>\\n      </div>\\n      <form #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"signInForm.valid && onSubmit(signInForm)\\\">\\n        <div class=\\\"card-content\\\">\\n          <input type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" required\\n            [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !email.valid }\\\">\\n          <div *ngIf=\\\"signInForm.submitted && email.errors?.pattern\\\">\\n            <label class=\\\"validation-message\\\">Invalid email address.</label>\\n          </div>\\n\\n          <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\"\\n            required minlength=\\\"4\\\" [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !password.valid }\\\">\\n          <div *ngIf=\\\"signInForm.submitted && password.errors?.minlength\\\">\\n            <label class=\\\"validation-message\\\">Minimum 4 characters.</label>\\n          </div>\\n        </div>\\n        <div class=\\\"card-action\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Sign In</button>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <!-- Error message -->\\n    <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n      {{serverErrorMessages}}\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"row valign-wrapper\\\">\\n  <div class=\\\"col s12 m12 l6 offset-l3 valign\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-action white-text\\\" id=\\\"card-title\\\">\\n        <span class=\\\"card-title\\\">Sign Up</span>\\n      </div>\\n      <form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\n        <div class=\\\"card-content\\\">\\n          <input type=\\\"text\\\" #fullname=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.fullname\\\" name=\\\"fullname\\\"\\n            placeholder=\\\"Full Name\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !fullname.valid }\\\">\\n          <div *ngIf=\\\"signUpForm.submitted && !fullname.valid\\\">\\n            <label class=\\\"validation-message\\\">This field is required.</label>\\n          </div>\\n\\n          <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.email\\\" name=\\\"email\\\"\\n            placeholder=\\\"Email\\\" required [pattern]=\\\"emailRegex\\\"\\n            [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid }\\\">\\n          <div *ngIf=\\\"signUpForm.submitted && email.errors\\\">\\n            <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\n            <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\n          </div>\\n\\n          <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.password\\\" name=\\\"password\\\"\\n            placeholder=\\\"Password\\\" minlength=\\\"4\\\" required\\n            [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\n          <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\n            <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\n            <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Enter atleast 4 characters.</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-action\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Sign Up</button>\\n        </div>\\n      </form>\\n\\n      <!-- Success message -->\\n      <div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\n        Saved successfully\\n      </div>\\n\\n      <!-- Error message -->\\n      <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n        {{serverErrorMessages}}\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<router-outlet></router-outlet>\"","// modules\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// components\r\nimport { PhotosComponent } from './components/photos/photos.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SuppliersComponent } from './components/suppliers/suppliers.component';\r\nimport { InternalComponent } from './components/internal/internal.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { SignUpComponent } from './components/user/sign-up/sign-up.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { SignInComponent } from './components/user/sign-in/sign-in.component';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\n\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'signup', component: UserComponent,\r\n    children: [{ path: '', component: SignUpComponent }]\r\n  },\r\n  {\r\n    path: 'login', component: UserComponent,\r\n    children: [{ path: '', component: SignInComponent }]\r\n  },\r\n  {\r\n    path: 'profile', component: UserProfileComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '', redirectTo: '/login', pathMatch: 'full'\r\n  },\r\n  { path: 'photos', component: PhotosComponent },\r\n  { path: 'suppliers', component: SuppliersComponent },\r\n  { path: 'internal', component: InternalComponent },\r\n  { path: 'menu', component: MenuComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n  constructor(public user: UserService) { }\r\n}\r\n","// built-in\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// components\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PhotosComponent } from './components/photos/photos.component';\r\n\r\n// material\r\nimport { MaterialModule } from './material.module';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SuppliersComponent } from './components/suppliers/suppliers.component';\r\nimport { InternalComponent } from './components/internal/internal.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { SignUpComponent } from './components/user/sign-up/sign-up.component';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\nimport { SignInComponent } from './components/user/sign-in/sign-in.component';\r\nimport { UserService } from './services/user.service';\r\n\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        PhotosComponent,\r\n        HomeComponent,\r\n        SuppliersComponent,\r\n        InternalComponent,\r\n        MenuComponent,\r\n        UserComponent,\r\n        SignUpComponent,\r\n        UserProfileComponent,\r\n        SignInComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        MaterialModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    providers: [{\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: AuthInterceptor,\r\n        multi: true\r\n    }, AuthGuard, UserService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService, private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (!this.userService.isLoggedIn()) {\n      this.router.navigateByUrl('/login');\n      this.userService.deleteToken();\n      return false;\n    }\n    return true;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\nimport { UserService } from \"../services/user.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService: UserService, private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n        if (req.headers.get('noauth'))\r\n            return next.handle(req.clone());\r\n        else {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + this.userService.getToken())\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(\r\n                    event => { },\r\n                    err => {\r\n                        if (err.error.auth == false) {\r\n                            this.router.navigateByUrl('/login');\r\n                        }\r\n                    })\r\n            );\r\n        }\r\n    }\r\n}","module.exports = \"p {\\r\\n    color: blue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcclxuICAgIGNvbG9yOiBibHVlO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport { Photo } from 'src/app/models/photo';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private photoService: PhotoService) { }\n\n  ngOnInit() {\n    this.getPhotos();\n  }\n\n  getPhotos() {\n    this.photoService.getPhotos()\n      .subscribe(res => {\n        this.photoService.photos = res as Photo[];\n        console.log(res);\n      });\n  }\n\n}\n","module.exports = \"span {\\r\\n    display: block;\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ntable th {\\r\\n    background-color: #673ab7;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ntable td {\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnRlcm5hbC9pbnRlcm5hbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2ludGVybmFsL2ludGVybmFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzcGFuIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbnRhYmxlIHRoIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NzNhYjc7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbnRhYmxlIHRkIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { InternalService } from 'src/app/services/internal.service';\nimport { NgForm } from '@angular/forms';\nimport { Internal } from 'src/app/models/internal';\ndeclare var M: any;\n\n@Component({\n  selector: 'app-internal',\n  templateUrl: './internal.component.html',\n  styleUrls: ['./internal.component.css']\n})\nexport class InternalComponent implements OnInit {\n\n  constructor(private internalService: InternalService) { }\n\n  ngOnInit() {\n    this.findAll();\n  }\n\n  addInternal(form: NgForm) {\n    if (form.value._id) {\n      this.internalService.putInternal(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({ html: 'Update successfully!', classes: 'rounded' });\n          this.findAll();\n        })\n    } else {\n      this.internalService.postInternal(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({ html: 'Saved successfully!', classes: 'rounded' });\n          this.findAll();\n        });\n    }\n  }\n\n  findAll() {\n    this.internalService.findAll()\n      .subscribe(res => {\n        this.internalService.allInternal = res as Internal[];\n        console.log(res);\n      });\n  }\n\n  editInternal(internal: Internal) {\n    this.internalService.selectedInternal = internal;\n  }\n\n  deleteInternal(_id: string) {\n    if (confirm('Are you sure want to delete it?')) {\n      this.internalService.deleteInternal(_id)\n        .subscribe(res => {\n          this.findAll();\n          M.toast({ html: 'Deleted successfully!', classes: 'rounded' })\n        });\n    }\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.internalService.selectedInternal = new Internal();\n    }\n  }\n\n}//End class\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { NgForm } from '@angular/forms';\nimport { Menu } from 'src/app/models/menu';\ndeclare var M: any;\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private menuService: MenuService) { }\n\n  ngOnInit() {\n    this.findAll();\n  }\n\n  addMenu(form: NgForm) {\n    if (form.value._id) {\n      this.menuService.putMenu(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({ html: 'Update successfully!', classes: 'rounded' });\n          this.findAll();\n        })\n    } else {\n      this.menuService.postMenu(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({ html: 'Saved successfully!', classes: 'rounded' });\n          this.findAll();\n        });\n    }\n  }\n\n  findAll() {\n    this.menuService.findAll()\n      .subscribe(res => {\n        this.menuService.menus = res as Menu[];\n        console.log(res);\n      });\n  }\n\n  editMenu(menu: Menu) {\n    this.menuService.selectedMenu = menu;\n  }\n\n  deleteMenu(_id: string) {\n    if (confirm('Are you sure want to delete it?')) {\n      this.menuService.deleteMenu(_id)\n        .subscribe(res => {\n          this.findAll();\n          M.toast({ html: 'Deleted successfully!', classes: 'rounded' })\n        });\n    }\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.menuService.selectedMenu = new Menu();\n    }\n  }\n\n}//End class\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGhvdG9zL3Bob3Rvcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PhotoService } from 'src/app/services/photo.service';\r\nimport { Photo } from 'src/app/models/photo';\r\ndeclare var M: any;\r\n\r\n@Component({\r\n  selector: 'app-photos',\r\n  templateUrl: './photos.component.html',\r\n  styleUrls: ['./photos.component.css'],\r\n  providers: [PhotoService]\r\n})\r\nexport class PhotosComponent implements OnInit {\r\n\r\n  constructor(private photoService: PhotoService) { }\r\n\r\n  ngOnInit() {\r\n    this.getPhotos();\r\n  }\r\n\r\n  addPhoto(form: NgForm) {\r\n    if (form.value._id) {\r\n      this.photoService.putPhoto(form.value)\r\n        .subscribe(res => {\r\n          this.resetForm(form);\r\n          M.toast({ html: 'Updated successfully!', classes: 'rounded' });\r\n          this.getPhotos();\r\n        });\r\n    } else {\r\n      this.photoService.postPhoto(form.value)\r\n        .subscribe(res => {\r\n          this.resetForm(form);\r\n          M.toast({ html: 'Saved successfully!', classes: 'rounded' });\r\n          this.getPhotos();\r\n        });\r\n    }\r\n  }\r\n\r\n  getPhotos() {\r\n    this.photoService.getPhotos()\r\n      .subscribe(res => {\r\n        this.photoService.photos = res as Photo[];\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  editPhotos(photo: Photo) {\r\n    this.photoService.selectedPhoto = photo;\r\n  }\r\n\r\n  deletePhoto(_id: string) {\r\n    if (confirm('Are you sure want to delete it?')) {\r\n      this.photoService.deletePhoto(_id)\r\n        .subscribe(res => {\r\n          this.getPhotos();\r\n          M.toast({ html: 'Deleted successfully!', classes: 'rounded' });\r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if (form) {\r\n      form.reset();\r\n      this.photoService.selectedPhoto = new Photo();\r\n    }\r\n  }\r\n\r\n  onFileSelected(event) {\r\n    this.photoService.onFileSelected(event);\r\n  }\r\n  onUpload() {\r\n    this.photoService.onUpload();\r\n  }\r\n\r\n}//End class\r\n","module.exports = \"span {\\r\\n    display: block;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ntable th {\\r\\n    background-color: #673ab7;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ntable td {\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zdXBwbGllcnMvc3VwcGxpZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zdXBwbGllcnMvc3VwcGxpZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzcGFuIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG50YWJsZSB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjczYWI3O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG50YWJsZSB0ZCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SupplierService } from 'src/app/services/supplier.service';\nimport { NgForm } from '@angular/forms';\nimport { Supplier } from 'src/app/models/supplier';\ndeclare var M: any;\n\n@Component({\n  selector: 'app-suppliers',\n  templateUrl: './suppliers.component.html',\n  styleUrls: ['./suppliers.component.css'],\n  providers: [SupplierService]\n})\nexport class SuppliersComponent implements OnInit {\n\n  constructor(private supplierService: SupplierService) { }\n  displayedColumns: string[] = ['company', 'contact', 'phone', 'operations'];\n  dataSource = this.supplierService.suppliers;\n\n  ngOnInit() {\n    this.getSuppliers();\n  }\n\n  addSupplier(form: NgForm) {\n    if (form.value._id) {\n      this.supplierService.putSupplier(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({ html: 'Updated successfully!', classes: 'rounded' });\n          this.getSuppliers();\n        });\n    } else {\n      this.supplierService.postSupplier(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({ html: 'Saved successfully!', classes: 'rounded' });\n          this.getSuppliers();\n        });\n    }\n  }\n\n  getSuppliers() {\n    this.supplierService.getSuppliers()\n      .subscribe(res => {\n        this.supplierService.suppliers = res as Supplier[];\n        console.log(res);\n      })\n  }\n\n  editSupplier(supplier: Supplier) {\n    this.supplierService.selectedSupplier = supplier;\n  }\n\n  deleteSupplier(_id: string) {\n    if (confirm('Are you sure you want to delete it?')) {\n      this.supplierService.deleteSupplier(_id)\n        .subscribe(res => {\n          this.getSuppliers();\n          M.toast({ html: 'Deleted successfully!', classes: 'rounded' })\n        })\n    }\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) {\n      form.reset();\n      this.supplierService.selectedSupplier = new Supplier();\n    }\n  }\n\n}//End class\n","module.exports = \".example-card {\\r\\n    max-width: 400px;\\r\\n  }\\r\\n  \\r\\n  .example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxtRkFBbUY7SUFDbkYsc0JBQXNCO0VBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWhlYWRlci1pbWFnZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vbWF0ZXJpYWwuYW5ndWxhci5pby9hc3NldHMvaW1nL2V4YW1wbGVzL3NoaWJhMS5qcGcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  userDetails;\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.userService.getUserProfile()\n      .subscribe(\n        res => {\n          this.userDetails = res['user'];\n        },\n        err => { }\n      )\n  }\n\n  onLogout() {\n    this.userService.deleteToken();\n    this.router.navigate(['/login']);\n  }\n\n}//End class\n","module.exports = \"#card-title {\\r\\n    background: #9b59b6;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NhcmQtdGl0bGUge1xyXG4gICAgYmFja2dyb3VuZDogIzliNTliNjtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) { }\n  model = {\n    email: '',\n    password: ''\n  };\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  serverErrorMessages: string;\n\n  ngOnInit() {\n    if (this.userService.isLoggedIn())\n      this.router.navigateByUrl('/profile');\n  }\n\n  onSubmit(form: NgForm) {\n    this.userService.login(form.value)\n      .subscribe(res => {\n        this.userService.setToken(res['token']);\n        this.router.navigateByUrl('/profile');\n      },\n        err => {\n          this.serverErrorMessages = err.error.message;\n        }\n      );\n  }\n\n}//End class\n","module.exports = \"#card-title {\\r\\n    background: #8e44ad;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NhcmQtdGl0bGUge1xyXG4gICAgYmFja2dyb3VuZDogIzhlNDRhZDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  showSucessMessage: boolean;\n  serverErrorMessages: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    this.userService.postUser(form.value)\n      .subscribe(res => {\n        this.showSucessMessage = true;\n        setTimeout(() => this.showSucessMessage = false, 4000);\n        this.resetForm(form);\n      },\n        err => {\n          if (err.status === 422) {\n            this.serverErrorMessages = err.error.join('<br/>');\n          }\n          else\n            this.serverErrorMessages = 'Something went wrong. Please contact admin.';\n        }\n      );\n  }\n\n  resetForm(form: NgForm) {\n    this.userService.selectedUser = {\n      fullname: '',\n      email: '',\n      password: ''\n    };\n    form.resetForm();\n    this.serverErrorMessages = '';\n  }\n\n}//End class\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\n\r\n// material angular\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatBadgeModule,\r\n    MatInputModule,\r\n    MatFormFieldModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatTableModule,\r\n        MatBadgeModule,\r\n        MatInputModule,\r\n        MatFormFieldModule\r\n    ],\r\n    exports: [\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatTableModule,\r\n        MatBadgeModule,\r\n        MatInputModule,\r\n        MatFormFieldModule\r\n    ]\r\n})\r\nexport class MaterialModule { }","export class Internal {\n    constructor(_id = '', type = '', responsible = '', amount = 0, reason = '') {\n        this._id = _id;\n        this.type = type;\n        this.responsible = responsible;\n        this.amount = amount;\n        this.reason = reason;\n    }\n\n    _id: string;\n    type: string;\n    responsible: string;\n    amount: number;\n    reason: string;\n}\n","export class Menu {\n    constructor(_id = '', type = '', name = '', description = '', price = 0, image = '') {\n        this._id = _id;\n        this.type = type;\n        this.name = name;\n        this.description = description;\n        this.price = price;\n        this.image = image;\n    }\n\n    _id: string;\n    type: string;\n    name: string;\n    description: string;\n    price: number;\n    image: string\n}\n","export class Photo {\r\n    constructor(_id = '', title = '', description = '', imageURL = '', public_id = '') {\r\n        this._id = _id;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.imageURL = imageURL;\r\n        this.public_id = public_id;\r\n    }\r\n\r\n    _id: string;\r\n    title: string;\r\n    description: string;\r\n    imageURL: string;\r\n    public_id: string;\r\n}\r\n","export class Supplier {\n    constructor(_id = '', companyName = '', contactName = '', address = '', city = '', postalCode = 0,\n        country = '', phone = 0) {\n        this._id = _id;\n        this.companyName = companyName;\n        this.contactName = contactName;\n        this.address = address;\n        this.city = city;\n        this.postalCode = postalCode;\n        this.country = country;\n        this.phone = phone;\n    }\n\n    _id: string;\n    companyName: string;\n    contactName: string;\n    address: string;\n    city: string;\n    postalCode: number;\n    country: string;\n    phone: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Internal } from '../models/internal';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InternalService {\n  selectedInternal: Internal;\n  allInternal: Internal[] = [];\n  readonly API = '/internal';\n\n  constructor(private http: HttpClient) {\n    this.selectedInternal = new Internal;\n  }\n\n  findAll() {\n    return this.http.get(environment.URL_API + this.API);\n  }\n\n  postInternal(Internal: Internal) {\n    return this.http.post(environment.URL_API + this.API, Internal);\n  }\n\n  putInternal(internal: Internal) {\n    return this.http.put(environment.URL_API + this.API + `/${internal._id}`, internal);\n  }\n\n  deleteInternal(_id: string) {\n    return this.http.delete(environment.URL_API + this.API + `/${_id}`);\n  }\n\n}//End class\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Menu } from '../models/menu';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  selectedMenu: Menu;\n  menus: Menu[];\n  readonly API = '/menus';\n\n  constructor(private http: HttpClient) {\n    this.selectedMenu = new Menu;\n  }\n\n  findAll() {\n    return this.http.get(environment.URL_API + this.API);\n  }\n\n  postMenu(Menu: Menu) {\n    return this.http.post(environment.URL_API + this.API, Menu);\n  }\n\n  putMenu(menu: Menu) {\n    return this.http.put(environment.URL_API + this.API + `/${menu._id}`, menu);\n  }\n\n  deleteMenu(_id: string) {\n    return this.http.delete(environment.URL_API + this.API + `/${_id}`);\n  }\n\n}//End class\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Photo } from '../models/photo';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhotoService {\r\n  selectedPhoto: Photo;\r\n  photos: Photo[];\r\n  readonly API = '/photos';\r\n  selectedFile = null;\r\n  fileData: File = null;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.selectedPhoto = new Photo;\r\n  }\r\n\r\n  fileProgress(fileInput: any) {\r\n    this.fileData = <File>fileInput.target.files[0];\r\n  }\r\n\r\n  getPhotos() {\r\n    return this.http.get(environment.URL_API + this.API);\r\n  }\r\n\r\n  postPhoto(Photo: Photo) {\r\n    const fd = new FormData();\r\n    fd.append('file', this.fileData);\r\n    return this.http.post(environment.URL_API + this.API, Photo);\r\n  }\r\n\r\n  putPhoto(photo: Photo) {\r\n    return this.http.put(environment.URL_API + this.API + `/${photo._id}`, photo);\r\n  }\r\n\r\n  deletePhoto(_id: string) {\r\n    return this.http.delete(environment.URL_API + this.API + `/${_id}`);\r\n  }\r\n\r\n  onFileSelected(event) {\r\n    console.log(event);\r\n    this.selectedFile = <File>event.target.files[0];\r\n  }\r\n\r\n  onUpload() {\r\n    const fd = new FormData();\r\n    fd.append('imageURL', this.selectedFile, this.selectedFile.name);\r\n    return this.http.post(environment.URL_API + this.API, fd)\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n}//End class\r\n","import { Injectable } from '@angular/core';\nimport { Supplier } from '../models/supplier';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierService {\n  selectedSupplier: Supplier;\n  suppliers: Supplier[];\n  readonly API = '/suppliers';\n\n  constructor(private http: HttpClient) {\n    this.selectedSupplier = new Supplier();\n  }\n\n  getSuppliers() {\n    return this.http.get(environment.URL_API + this.API);\n  }\n\n  postSupplier(Supplier: Supplier) {\n    return this.http.post(environment.URL_API + this.API, Supplier);\n  }\n\n  putSupplier(supplier: Supplier) {\n    return this.http.put(environment.URL_API + this.API + `/${supplier._id}`, supplier);\n  }\n\n  deleteSupplier(_id: string) {\n    return this.http.delete(environment.URL_API + this.API + `/${_id}`);\n  }\n\n}//End class\n\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  selectedUser: User = {\n    fullname: '',\n    email: '',\n    password: ''\n  };\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\n\n  constructor(private http: HttpClient) { }\n\n  //HttpMethods\n  postUser(user: User) {\n    return this.http.post(environment.URL_API + '/register', user, this.noAuthHeader);\n  }\n\n  login(authCredentials) {\n    return this.http.post(environment.URL_API + '/authenticate', authCredentials, this.noAuthHeader);\n  }\n\n  getUserProfile() {\n    return this.http.get(environment.URL_API + '/profile');\n  }\n\n  //Helper Methods\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    var token = this.getToken();\n    if (token) {\n      var userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    } else {\n      return null;\n    }\n  }\n\n  isLoggedIn() {\n    var userPayload = this.getUserPayload();\n    if (userPayload) {\n      return userPayload.exp > Date.now() / 1000;\n    } else {\n      return null;\n    }\n  }\n\n}//End class\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  URL_API: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}